LIBkk10691, LIBjj82387, LIBjj47567
1. standalone test cases (mostly done)
2. update test center
3. test security feature 11396
4. test case for suLogData and suPanic dealing invalid pointer
   	Peng: Let's waiting for training from Cui Gang
5. test case for handling a SUAPI panic that occurs in interrupt context
   	Peng: Sample code provided in LIBkk10691


LIBkk10690, LIBjj53650, LIBjj21732
1. standalone test cases (mostly done)
2. test security feature 11396
3. verify log file automatically with log_conv(log_parser) (mostly done)

LIBkk10692
1. standalone test cases
2. test security feature 11396
3. update for LIBkk03895 and LIBkk11847, SDMA status log file after BP panic
(log SDMA status in a file after BP panic)(this is a low priority
task)
   	  This work is being done for 6.2/6.3 in CR LIBkk11736.
	  We were told late last week to integrate a change made on a
	  debug branch that is necessary to diagnose SDMA issues. The
	  debug branch is dbg_zfr11_fgaf1z_dump_sdma_status. It only
	  modifies panic_daemon.c. There were several problems with
	  this implementation, so I modified it.
	  A summary of the changes I made: 
	  - most importantly, the SDMA status messages are logged to a
	  new file (/ezxlocal/panic/sdma_status.log). Adding them to
	  the panic block file would interfere with APR functioning,
	  and perhaps introduce other problems. This new file will
	  have a new message added each time. When the file reaches
	  the maximum 64 KB, the file is erased and starts over with
	  new messages. 
	  - to sync the messages in the files, the sdma message
	  timestamp is updated to match the timestamp of the BP panic
	  message. - the message ID of this new message type was
	  changed from "SDMA", to follow the correct procedure of
	  being reserved in the ID reservation website. The new
	  message ID is now 0xA6920. 
	  - The conditional checks for "DBG_PLAT_SW_TESTS" were
	  removed.
	  - the header file scma11rwreg.h that was included is
	  GPL. For now, I've redefined the ioctl number needed
	  directly in the panic daemon, and updated CR LIBkk04425 to
	  address a better solution. 
	  - If /dev/rwreg doesn't exist or fails to open, the panic
	  daemon now just skips the SDMA status portion, but continues
	  normal execution, instead of failing out. 
	  - only get and write the SDMA status info if phone is not in
	  production mode (we're assuming /dev/rwreg won't exist in a
	  production phone anyway). 
	  - defined a structure type, used standard functions htonl,
	  htons, etc. to make it more maintainable. 

   

4. update for LIBkk56777, removing suPanic call during BP panic
Peng: test cases shall be updated because SUAPI data no longer accompanies a BP Panic.
We have no case to test that yet, so no update needed. ?????
Changes of LIBkk56777: Comment out the call to SuPanic
File: /vobs/wsd_tapi/modem_services/src/ms_tapi_notif/MS_TAPI_Notif.cc
function: handle_bp_paniced_ind()

LIBkk93882, LIBkk10689, LIBkk11847 (Closed)
1. update test scripts in vob
2. support for new test process used in CR testing/verification

LIBkk10691
1. all above CR's
2. The panic daemon regression tests do not test that the Warmplug and
Reboot changes behave correctly. Fix that.
       While phone panics while not connected to the PC, connect the
       phone to PC with USB cable and launch RTA with RS232 as input
       device, you can get panic data.
3. The panic daemon should test the BP Panic and SUAPI Panic actions
possible via Panic API.
4. Add test cases for MMC Logging.

C files needed by panic daemon testing:
supanic_test.c
tcmd_test.c
panicapi_test.c
