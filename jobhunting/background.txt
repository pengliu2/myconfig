---+Tools and method for power usage analysis on ARM Linux
   * Owner

   This played a key role in the development of latest flagship products. Following jobs have been done to build up a systematic method to keep track of energy usage, point out the violator and optimize battery performance. 

   For the handheld devices battery performance is one of the most important aspect to determine the user's experience. So The goal was to profile the various use cases, and whether we have each of the use cases executing in the right power states or not to flush out more system issues. 

   The energy saving efforts can be grouped into two major categories. One is about static current, and the other about active current drain. 

   Almost all chipset designers define different levels of sleep modes for the devices. The deeper level a device is sleeping on, the less energy it is consuming. So when the system is idle, in order words, has nothing to do, the software will program the device in order to make it enter the sleep mode as deep as possible. There can be a couple of reasons which prevent the system from entering deep sleep mode. We will talk about this later.

   I'm working on the active use case domain now. For example, to 

   Idle mode with a wake_lock held is a special case. Because Android 

   Back to the static case domain. The 



---++Complemented 2.6.35 Linux kernel with support for tracing OMAP4 power events.

---++Implemented a current drain measurement tool. It formalized and automated the measurement.

We are using a Data Acquisition Device, the National Instrument NI 6230. The tool was developed with 

---++Created a reliable method to analyze traces.

top would be the first one of all tools you should try to identify the contributors to active case current drain.

---++Other Methods

Other kinds of CPUfreq governor.

We were trying to reduce the power consumption of the device by all means, while, meanwhile, we have to ensure the efforts do not hurt the performance of other aspects of the device. Most important one would be the interactive latency. From this point of view, the Ondemand governor which is used by Motorola now is not a perfect one. Because the sample interval is fixed, so even if the system gets very busy, there would be 


---+Debug infrastructure


---+OS porting

---++


! exclamation mark
? question mark
, comma
: colon
; semicolon
" double quote
' single quote
` back quote
* star
- dash
\ back slash
| vertical bar
$ dollar sign
# sharp
% percent sign
~ tilde
^ caret
{ left brace
[ left bracket
( left parenthesis
< angle bracket
