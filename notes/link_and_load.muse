* Link and Load


---++ Run a shared library on Linux

There should be three things a shared library shall have to be able to run independently.
   * !eXecutable permission
   * a entry point
   * explicit interpreter (run time linker)

In other words, we have to build the shared library to a runnable program without main().

<verbatim>
$cat func.
const char my_interp[] __attribute__((section(".interp"))) = "/lib/ld-linux.so.2";
#include <stdio.h>
void bar();

int
func()
{
   printf("Hacking\n");
   bar();
   exit (0);
}

void
bar()
{
   printf("Bye...\n");
}

$ gcc -fPIC -o func.so -shared -Wl,-e,func func.c

</verbatim>

---++ Shared Library

   * initialization on load

<verbatim>
__attribute((constructor))void init(){}
__attribute((destructor))void finalize(){}
<verbatim>
